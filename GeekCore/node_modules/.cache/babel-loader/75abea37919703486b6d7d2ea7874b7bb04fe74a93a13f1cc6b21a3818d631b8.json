{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 5000\n});\n\n// Interceptors\napi.interceptors.request.use(request => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    request.headers.Authorization = `Bearer ${token}`;\n  }\n  return request;\n});\napi.interceptors.response.use(response => response, error => {\n  var _error$config, _error$response;\n  console.error('Erro na requisição:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\n\n// Serviço de Autenticação\nexport const authService = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  updateUserProfile: async profileData => {\n    const response = await api.put('/auth/perfil', profileData);\n    return response.data;\n  },\n  getUserProfile: async userId => {\n    const response = await api.get(userId ? `/auth/perfil/${userId}` : '/auth/perfil');\n    return response.data;\n  },\n  getFavorites: async userId => {\n    const response = await api.get(userId ? `/auth/favoritos/${userId}` : '/auth/favoritos');\n    return response.data;\n  }\n};\n\n// Serviço de Conteúdo\nexport const contentService = {\n  getRecommendations: async () => {\n    const response = await api.get('/random');\n    return response.data;\n  },\n  getRecentContent: async () => {\n    const response = await api.get('/recent');\n    return response.data;\n  },\n  getItemDetails: async (collection, id) => {\n    const response = await api.get(`/item/${collection}/${id}`);\n    return response.data;\n  },\n  searchContent: async query => {\n    const response = await api.get(`/search?q=${encodeURIComponent(query)}`);\n    return response.data;\n  }\n};\n\n// Serviço de Amizade\nexport const amigoService = {\n  getAmigos: async () => {\n    const response = await api.get('/auth/amigos');\n    return response.data;\n  },\n  getSolicitacoes: async () => {\n    const response = await api.get('/auth/amizade/solicitacoes');\n    return response.data;\n  },\n  enviarSolicitacao: async email => {\n    const response = await api.post('/auth/amizade/solicitar', {\n      email\n    });\n    return response.data;\n  },\n  responderSolicitacao: async (solicitacaoId, aceitar) => {\n    const response = await api.post('/auth/amizade/responder', {\n      solicitacaoId,\n      aceitar\n    });\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","interceptors","request","use","token","localStorage","getItem","headers","Authorization","response","error","_error$config","_error$response","console","url","config","status","message","Promise","reject","authService","login","credentials","post","data","register","userData","updateUserProfile","profileData","put","getUserProfile","userId","get","getFavorites","contentService","getRecommendations","getRecentContent","getItemDetails","collection","id","searchContent","query","encodeURIComponent","amigoService","getAmigos","getSolicitacoes","enviarSolicitacao","email","responderSolicitacao","solicitacaoId","aceitar"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\r\n  timeout: 5000,\r\n});\r\n\r\n// Interceptors\r\napi.interceptors.request.use(request => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return request;\r\n});\r\n\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.error('Erro na requisição:', {\r\n      url: error.config?.url,\r\n      status: error.response?.status,\r\n      message: error.message\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Serviço de Autenticação\r\nexport const authService = {\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n  updateUserProfile: async (profileData) => {\r\n    const response = await api.put('/auth/perfil', profileData);\r\n    return response.data;\r\n  },\r\n  getUserProfile: async (userId) => {\r\n    const response = await api.get(userId ? `/auth/perfil/${userId}` : '/auth/perfil');\r\n    return response.data;\r\n  },\r\n  getFavorites: async (userId) => {\r\n    const response = await api.get(userId ? `/auth/favoritos/${userId}` : '/auth/favoritos');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Serviço de Conteúdo\r\nexport const contentService = {\r\n  getRecommendations: async () => {\r\n    const response = await api.get('/random');\r\n    return response.data;\r\n  },\r\n  getRecentContent: async () => {\r\n    const response = await api.get('/recent');\r\n    return response.data;\r\n  },\r\n  getItemDetails: async (collection, id) => {\r\n    const response = await api.get(`/item/${collection}/${id}`);\r\n    return response.data;\r\n  },\r\n  searchContent: async (query) => {\r\n    const response = await api.get(`/search?q=${encodeURIComponent(query)}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Serviço de Amizade\r\nexport const amigoService = {\r\n  getAmigos: async () => {\r\n    const response = await api.get('/auth/amigos');\r\n    return response.data;\r\n  },\r\n  getSolicitacoes: async () => {\r\n    const response = await api.get('/auth/amizade/solicitacoes');\r\n    return response.data;\r\n  },\r\n  enviarSolicitacao: async (email) => {\r\n    const response = await api.post('/auth/amizade/solicitar', { email });\r\n    return response.data;\r\n  },\r\n  responderSolicitacao: async (solicitacaoId, aceitar) => {\r\n    const response = await api.post('/auth/amizade/responder', { solicitacaoId, aceitar });\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}