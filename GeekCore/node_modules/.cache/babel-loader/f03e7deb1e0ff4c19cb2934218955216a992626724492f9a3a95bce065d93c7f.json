{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caio\\\\Documents\\\\GitHub\\\\Projetos-publicos\\\\GeekCore\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true\n};\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload.user\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user') || 'null');\n    if (token && user) {\n      dispatch({\n        type: 'LOGIN',\n        payload: {\n          user,\n          token\n        }\n      });\n    }\n\n    // Verificar parâmetros de autenticação na URL\n    const params = new URLSearchParams(window.location.search);\n    const urlToken = params.get('token');\n    const urlUser = params.get('user');\n    const auth = params.get('auth');\n    if (urlToken && urlUser && auth === 'success') {\n      try {\n        const userData = JSON.parse(decodeURIComponent(urlUser));\n\n        // Salvar dados no localStorage\n        localStorage.setItem('token', urlToken);\n        localStorage.setItem('user', JSON.stringify(userData));\n\n        // Atualizar estado\n        dispatch({\n          type: 'LOGIN',\n          payload: {\n            user: userData,\n            token: urlToken\n          }\n        });\n\n        // Limpar URL\n        window.history.replaceState({}, document.title, window.location.pathname);\n      } catch (error) {\n        console.error('Erro ao processar autenticação:', error);\n      }\n    }\n  }, []);\n  const updateUserData = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: {\n        user: {\n          ...state.user,\n          ...userData\n        },\n        token: state.token\n      }\n    });\n    // Atualizar também no localStorage\n    const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n    localStorage.setItem('user', JSON.stringify({\n      ...currentUser,\n      ...userData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      dispatch,\n      updateUserData,\n      isAuthenticated: !!state.token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","isAuthenticated","user","token","loading","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","localStorage","getItem","JSON","parse","params","URLSearchParams","window","location","search","urlToken","get","urlUser","auth","userData","decodeURIComponent","setItem","stringify","history","replaceState","document","title","pathname","error","console","updateUserData","currentUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect } from 'react';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: null,\r\n  loading: true\r\n};\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload.user }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = JSON.parse(localStorage.getItem('user') || 'null');\r\n\r\n    if (token && user) {\r\n      dispatch({ \r\n        type: 'LOGIN', \r\n        payload: { user, token }\r\n      });\r\n    }\r\n\r\n    // Verificar parâmetros de autenticação na URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const urlToken = params.get('token');\r\n    const urlUser = params.get('user');\r\n    const auth = params.get('auth');\r\n\r\n    if (urlToken && urlUser && auth === 'success') {\r\n      try {\r\n        const userData = JSON.parse(decodeURIComponent(urlUser));\r\n        \r\n        // Salvar dados no localStorage\r\n        localStorage.setItem('token', urlToken);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        \r\n        // Atualizar estado\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: { user: userData, token: urlToken }\r\n        });\r\n\r\n        // Limpar URL\r\n        window.history.replaceState({}, document.title, window.location.pathname);\r\n      } catch (error) {\r\n        console.error('Erro ao processar autenticação:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const updateUserData = (userData) => {\r\n    dispatch({ \r\n      type: 'UPDATE_USER', \r\n      payload: { \r\n        user: { ...state.user, ...userData },\r\n        token: state.token \r\n      } \r\n    });\r\n    // Atualizar também no localStorage\r\n    const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n    localStorage.setItem('user', JSON.stringify({ ...currentUser, ...userData }));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      ...state, \r\n      dispatch,\r\n      updateUserData,\r\n      isAuthenticated: !!state.token \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}