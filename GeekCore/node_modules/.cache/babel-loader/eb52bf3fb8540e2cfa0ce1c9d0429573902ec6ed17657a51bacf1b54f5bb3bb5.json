{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\n  timeout: 10000\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Adicionar tratamento de erro global\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', error);\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n    console.error('Bad Request:', error.response.data);\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  async login(email, senha) {\n    const {\n      data\n    } = await api.post('/api/auth/login', {\n      email,\n      senha\n    });\n    return data;\n  },\n  async register(nome, email, senha) {\n    const {\n      data\n    } = await api.post('/api/auth/register', {\n      nome,\n      email,\n      senha\n    });\n    return data;\n  },\n  async toggleFavorite(conteudoId, tipo) {\n    const {\n      data\n    } = await api.post('/api/auth/favoritos', {\n      conteudo_id: conteudoId,\n      tipo\n    });\n    return data;\n  },\n  async getFavorites() {\n    const {\n      data\n    } = await api.get('/api/auth/favoritos');\n    return data;\n  }\n};\nexport const contentService = {\n  // Cache para armazenar resultados recentes\n  _cache: new Map(),\n  _cacheTimeout: 5 * 60 * 1000,\n  // 5 minutos\n\n  async getFromCacheOrFetch(key, fetchFn) {\n    const cached = this._cache.get(key);\n    if (cached && Date.now() - cached.timestamp < this._cacheTimeout) {\n      return cached.data;\n    }\n    const data = await fetchFn();\n    this._cache.set(key, {\n      data,\n      timestamp: Date.now()\n    });\n    return data;\n  },\n  async getRecentContent() {\n    return this.getFromCacheOrFetch('recent', async () => {\n      const {\n        data\n      } = await api.get('/api/recent');\n      return data;\n    });\n  },\n  async searchContent(query) {\n    const {\n      data\n    } = await api.get(`/api/search?q=${encodeURIComponent(query)}`);\n    return data;\n  },\n  async getItem(collection, id) {\n    try {\n      // Validar ID e collection antes de fazer a requisição\n      if (!id || !collection) {\n        throw new Error('ID ou collection inválidos');\n      }\n\n      // Tentar buscar do cache primeiro\n      const cacheKey = `item_${collection}_${id}`;\n      const cached = this._cache.get(cacheKey);\n      if (cached && Date.now() - cached.timestamp < this._cacheTimeout) {\n        return cached.data;\n      }\n      console.log(`Requisitando item: collection=${collection}, id=${id}`);\n      const {\n        data\n      } = await api.get(`/api/item/${collection}/${id}`);\n      if (!data) {\n        throw new Error('Item não encontrado');\n      }\n      const processedData = {\n        ...data,\n        collection: collection,\n        tipo: collection === 'animes' ? 'anime' : 'filme'\n      };\n\n      // Armazenar no cache\n      this._cache.set(cacheKey, {\n        data: processedData,\n        timestamp: Date.now()\n      });\n      return processedData;\n    } catch (error) {\n      var _error$response2;\n      console.error('Erro ao buscar item:', {\n        error,\n        collection,\n        id,\n        response: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n      });\n      throw error;\n    }\n  },\n  async getRecommendations(collection) {\n    try {\n      console.log(`Requisitando recomendações para: ${collection}`);\n      const {\n        data\n      } = await api.get(`/api/random/${collection}`);\n      return data.map(item => ({\n        ...item,\n        collection: collection,\n        tipo: collection === 'animes' ? 'anime' : 'filme'\n      }));\n    } catch (error) {\n      console.error('Erro ao buscar recomendações:', error);\n      return [];\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","console","status","data","Promise","reject","authService","login","email","senha","post","register","nome","toggleFavorite","conteudoId","tipo","conteudo_id","getFavorites","get","contentService","_cache","Map","_cacheTimeout","getFromCacheOrFetch","key","fetchFn","cached","Date","now","timestamp","set","getRecentContent","searchContent","query","encodeURIComponent","collection","id","Error","cacheKey","log","processedData","_error$response2","getRecommendations","map","item"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\r\n  timeout: 10000,\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Adicionar tratamento de erro global\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.error('API Error:', error);\r\n    if (error.response?.status === 400) {\r\n      console.error('Bad Request:', error.response.data);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  async login(email, senha) {\r\n    const { data } = await api.post('/api/auth/login', { email, senha });\r\n    return data;\r\n  },\r\n\r\n  async register(nome, email, senha) {\r\n    const { data } = await api.post('/api/auth/register', { nome, email, senha });\r\n    return data;\r\n  },\r\n\r\n  async toggleFavorite(conteudoId, tipo) {\r\n    const { data } = await api.post('/api/auth/favoritos', { conteudo_id: conteudoId, tipo });\r\n    return data;\r\n  },\r\n\r\n  async getFavorites() {\r\n    const { data } = await api.get('/api/auth/favoritos');\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const contentService = {\r\n  // Cache para armazenar resultados recentes\r\n  _cache: new Map(),\r\n  _cacheTimeout: 5 * 60 * 1000, // 5 minutos\r\n\r\n  async getFromCacheOrFetch(key, fetchFn) {\r\n    const cached = this._cache.get(key);\r\n    if (cached && Date.now() - cached.timestamp < this._cacheTimeout) {\r\n      return cached.data;\r\n    }\r\n    const data = await fetchFn();\r\n    this._cache.set(key, { data, timestamp: Date.now() });\r\n    return data;\r\n  },\r\n\r\n  async getRecentContent() {\r\n    return this.getFromCacheOrFetch('recent', async () => {\r\n      const { data } = await api.get('/api/recent');\r\n      return data;\r\n    });\r\n  },\r\n\r\n  async searchContent(query) {\r\n    const { data } = await api.get(`/api/search?q=${encodeURIComponent(query)}`);\r\n    return data;\r\n  },\r\n\r\n  async getItem(collection, id) {\r\n    try {\r\n      // Validar ID e collection antes de fazer a requisição\r\n      if (!id || !collection) {\r\n        throw new Error('ID ou collection inválidos');\r\n      }\r\n\r\n      // Tentar buscar do cache primeiro\r\n      const cacheKey = `item_${collection}_${id}`;\r\n      const cached = this._cache.get(cacheKey);\r\n      if (cached && Date.now() - cached.timestamp < this._cacheTimeout) {\r\n        return cached.data;\r\n      }\r\n\r\n      console.log(`Requisitando item: collection=${collection}, id=${id}`);\r\n      const { data } = await api.get(`/api/item/${collection}/${id}`);\r\n      \r\n      if (!data) {\r\n        throw new Error('Item não encontrado');\r\n      }\r\n\r\n      const processedData = {\r\n        ...data,\r\n        collection: collection,\r\n        tipo: collection === 'animes' ? 'anime' : 'filme'\r\n      };\r\n\r\n      // Armazenar no cache\r\n      this._cache.set(cacheKey, {\r\n        data: processedData,\r\n        timestamp: Date.now()\r\n      });\r\n\r\n      return processedData;\r\n    } catch (error) {\r\n      console.error('Erro ao buscar item:', {\r\n        error,\r\n        collection,\r\n        id,\r\n        response: error.response?.data\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getRecommendations(collection) {\r\n    try {\r\n      console.log(`Requisitando recomendações para: ${collection}`);\r\n      const { data } = await api.get(`/api/random/${collection}`);\r\n      return data.map(item => ({\r\n        ...item,\r\n        collection: collection,\r\n        tipo: collection === 'animes' ? 'anime' : 'filme'\r\n      }));\r\n    } catch (error) {\r\n      console.error('Erro ao buscar recomendações:', error);\r\n      return [];\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}