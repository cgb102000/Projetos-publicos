{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001' // Removido /api da baseURL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authService = {\n  async login(email, senha) {\n    const {\n      data\n    } = await api.post('/auth/login', {\n      email,\n      senha\n    });\n    return data;\n  },\n  async register(nome, email, senha) {\n    const {\n      data\n    } = await api.post('/auth/register', {\n      nome,\n      email,\n      senha\n    });\n    return data;\n  },\n  async toggleFavorite(conteudoId, tipo) {\n    const {\n      data\n    } = await api.post('/auth/favoritos', {\n      conteudo_id: conteudoId,\n      tipo\n    });\n    return data;\n  },\n  async getFavorites() {\n    const {\n      data\n    } = await api.get('/auth/favoritos');\n    return data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authService","login","email","senha","data","post","register","nome","toggleFavorite","conteudoId","tipo","conteudo_id","getFavorites","get"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001'  // Removido /api da baseURL\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authService = {\r\n  async login(email, senha) {\r\n    const { data } = await api.post('/auth/login', { email, senha });\r\n    return data;\r\n  },\r\n\r\n  async register(nome, email, senha) {\r\n    const { data } = await api.post('/auth/register', { nome, email, senha });\r\n    return data;\r\n  },\r\n\r\n  async toggleFavorite(conteudoId, tipo) {\r\n    const { data } = await api.post('/auth/favoritos', { conteudo_id: conteudoId, tipo });\r\n    return data;\r\n  },\r\n\r\n  async getFavorites() {\r\n    const { data } = await api.get('/auth/favoritos');\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACxB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAM,CAAC,CAAC;IAChE,OAAOC,IAAI;EACb,CAAC;EAED,MAAME,QAAQA,CAACC,IAAI,EAAEL,KAAK,EAAEC,KAAK,EAAE;IACjC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAE;MAAEE,IAAI;MAAEL,KAAK;MAAEC;IAAM,CAAC,CAAC;IACzE,OAAOC,IAAI;EACb,CAAC;EAED,MAAMI,cAAcA,CAACC,UAAU,EAAEC,IAAI,EAAE;IACrC,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,iBAAiB,EAAE;MAAEM,WAAW,EAAEF,UAAU;MAAEC;IAAK,CAAC,CAAC;IACrF,OAAON,IAAI;EACb,CAAC;EAED,MAAMQ,YAAYA,CAAA,EAAG;IACnB,MAAM;MAAER;IAAK,CAAC,GAAG,MAAMhB,GAAG,CAACyB,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOT,IAAI;EACb;AACF,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}