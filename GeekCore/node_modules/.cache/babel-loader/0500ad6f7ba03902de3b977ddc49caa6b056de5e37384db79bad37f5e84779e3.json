{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caio\\\\Documents\\\\GitHub\\\\Projetos-publicos\\\\GeekCore\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme ? savedTheme === 'dark' : true;\n  });\n  const [themeColor, setThemeColor] = useState(() => {\n    return localStorage.getItem('themeColor') || '#ef4444';\n  });\n  const toggleTheme = newTheme => {\n    const themeValue = typeof newTheme === 'boolean' ? newTheme : !isDarkMode;\n    setIsDarkMode(themeValue);\n    localStorage.setItem('theme', themeValue ? 'dark' : 'light');\n    document.documentElement.classList.toggle('dark', themeValue);\n  };\n  const updateThemeColor = color => {\n    setThemeColor(color);\n    localStorage.setItem('themeColor', color);\n    document.documentElement.style.setProperty('--color-primary', color);\n  };\n  useEffect(() => {\n    document.documentElement.classList.toggle('dark', isDarkMode);\n    document.documentElement.style.setProperty('--color-primary', themeColor);\n  }, [isDarkMode, themeColor]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme,\n      themeColor,\n      setThemeColor: updateThemeColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"rHrAs5u/DLeLtG3MxTNRywy5kow=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","themeColor","setThemeColor","toggleTheme","newTheme","themeValue","setItem","document","documentElement","classList","toggle","updateThemeColor","color","style","setProperty","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/contexts/ThemeContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    return savedTheme ? savedTheme === 'dark' : true;\r\n  });\r\n\r\n  const [themeColor, setThemeColor] = useState(() => {\r\n    return localStorage.getItem('themeColor') || '#ef4444';\r\n  });\r\n\r\n  const toggleTheme = (newTheme) => {\r\n    const themeValue = typeof newTheme === 'boolean' ? newTheme : !isDarkMode;\r\n    setIsDarkMode(themeValue);\r\n    localStorage.setItem('theme', themeValue ? 'dark' : 'light');\r\n    document.documentElement.classList.toggle('dark', themeValue);\r\n  };\r\n\r\n  const updateThemeColor = (color) => {\r\n    setThemeColor(color);\r\n    localStorage.setItem('themeColor', color);\r\n    document.documentElement.style.setProperty('--color-primary', color);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.documentElement.classList.toggle('dark', isDarkMode);\r\n    document.documentElement.style.setProperty('--color-primary', themeColor);\r\n  }, [isDarkMode, themeColor]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ \r\n      isDarkMode, \r\n      toggleTheme, \r\n      themeColor, \r\n      setThemeColor: updateThemeColor \r\n    }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASO,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACjD,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGA,UAAU,KAAK,MAAM,GAAG,IAAI;EAClD,CAAC,CAAC;EAEF,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,MAAM;IACjD,OAAOW,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,SAAS;EACxD,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAIC,QAAQ,IAAK;IAChC,MAAMC,UAAU,GAAG,OAAOD,QAAQ,KAAK,SAAS,GAAGA,QAAQ,GAAG,CAACR,UAAU;IACzEC,aAAa,CAACQ,UAAU,CAAC;IACzBN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAED,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;IAC5DE,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEL,UAAU,CAAC;EAC/D,CAAC;EAED,MAAMM,gBAAgB,GAAIC,KAAK,IAAK;IAClCV,aAAa,CAACU,KAAK,CAAC;IACpBb,YAAY,CAACO,OAAO,CAAC,YAAY,EAAEM,KAAK,CAAC;IACzCL,QAAQ,CAACC,eAAe,CAACK,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAEF,KAAK,CAAC;EACtE,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEd,UAAU,CAAC;IAC7DW,QAAQ,CAACC,eAAe,CAACK,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAEb,UAAU,CAAC;EAC3E,CAAC,EAAE,CAACL,UAAU,EAAEK,UAAU,CAAC,CAAC;EAE5B,oBACEV,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAC5BpB,UAAU;MACVO,WAAW;MACXF,UAAU;MACVC,aAAa,EAAES;IACjB,CAAE;IAAAjB,QAAA,EACCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACzB,EAAA,CAtCeF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAwC7B,OAAO,MAAM6B,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACK,YAAY,CAAC;AAAA;AAAC+B,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}