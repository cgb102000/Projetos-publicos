{"ast":null,"code":"import{useContext}from'react';import{Navigate}from'react-router-dom';import{AuthContext}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";export function PrivateRoute(_ref){let{children}=_ref;const{isAuthenticated,loading}=useContext(AuthContext);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"})});}if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return children;}","map":{"version":3,"names":["useContext","Navigate","AuthContext","jsx","_jsx","PrivateRoute","_ref","children","isAuthenticated","loading","className","to"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/components/PrivateRoute.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nexport function PrivateRoute({ children }) {\r\n  const { isAuthenticated, loading } = useContext(AuthContext);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return children;\r\n}\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAAEE,eAAe,CAAEC,OAAQ,CAAC,CAAGT,UAAU,CAACE,WAAW,CAAC,CAE5D,GAAIO,OAAO,CAAE,CACX,mBACEL,IAAA,QAAKM,SAAS,CAAC,+CAA+C,CAAAH,QAAA,cAC5DH,IAAA,QAAKM,SAAS,CAAC,0EAA0E,CAAM,CAAC,CAC7F,CAAC,CAEV,CAEA,GAAI,CAACF,eAAe,CAAE,CACpB,mBAAOJ,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,MAAO,CAAAJ,QAAQ,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}