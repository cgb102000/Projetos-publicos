{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001' // Removido o /api da baseURL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Adicionar tratamento de erro global\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', error);\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n    console.error('Bad Request:', error.response.data);\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  async login(email, senha) {\n    const {\n      data\n    } = await api.post('/api/auth/login', {\n      email,\n      senha\n    });\n    return data;\n  },\n  async register(nome, email, senha) {\n    const {\n      data\n    } = await api.post('/api/auth/register', {\n      nome,\n      email,\n      senha\n    });\n    return data;\n  },\n  async toggleFavorite(conteudoId, tipo) {\n    const {\n      data\n    } = await api.post('/api/auth/favoritos', {\n      conteudo_id: conteudoId,\n      tipo\n    });\n    return data;\n  },\n  async getFavorites() {\n    const {\n      data\n    } = await api.get('/api/auth/favoritos');\n    return data;\n  }\n};\nexport const contentService = {\n  async getRecentContent() {\n    const {\n      data\n    } = await api.get('/api/recent');\n    return data;\n  },\n  async searchContent(query) {\n    const {\n      data\n    } = await api.get(`/api/search?q=${encodeURIComponent(query)}`);\n    return data;\n  },\n  async getItem(collection, id) {\n    try {\n      console.log(`Buscando item: collection=${collection}, id=${id}`);\n      const {\n        data\n      } = await api.get(`/api/item/${collection}/${id}`);\n      return {\n        ...data,\n        collection,\n        tipo: collection === 'animes' ? 'anime' : 'filme'\n      };\n    } catch (error) {\n      console.error(`Erro ao buscar item ${id} da coleção ${collection}:`, error);\n      throw error;\n    }\n  },\n  async getRecommendations(collection) {\n    try {\n      const {\n        data\n      } = await api.get(`/api/random/${collection}`);\n      console.log('Recomendações recebidas:', data);\n      return data;\n    } catch (error) {\n      console.error('Erro ao buscar recomendações:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","console","status","data","Promise","reject","authService","login","email","senha","post","register","nome","toggleFavorite","conteudoId","tipo","conteudo_id","getFavorites","get","contentService","getRecentContent","searchContent","query","encodeURIComponent","collection","id","log","getRecommendations"],"sources":["C:/Users/Caio/Documents/GitHub/Projetos-publicos/GeekCore/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001'  // Removido o /api da baseURL\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Adicionar tratamento de erro global\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.error('API Error:', error);\r\n    if (error.response?.status === 400) {\r\n      console.error('Bad Request:', error.response.data);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  async login(email, senha) {\r\n    const { data } = await api.post('/api/auth/login', { email, senha });\r\n    return data;\r\n  },\r\n\r\n  async register(nome, email, senha) {\r\n    const { data } = await api.post('/api/auth/register', { nome, email, senha });\r\n    return data;\r\n  },\r\n\r\n  async toggleFavorite(conteudoId, tipo) {\r\n    const { data } = await api.post('/api/auth/favoritos', { conteudo_id: conteudoId, tipo });\r\n    return data;\r\n  },\r\n\r\n  async getFavorites() {\r\n    const { data } = await api.get('/api/auth/favoritos');\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const contentService = {\r\n  async getRecentContent() {\r\n    const { data } = await api.get('/api/recent');\r\n    return data;\r\n  },\r\n\r\n  async searchContent(query) {\r\n    const { data } = await api.get(`/api/search?q=${encodeURIComponent(query)}`);\r\n    return data;\r\n  },\r\n\r\n  async getItem(collection, id) {\r\n    try {\r\n      console.log(`Buscando item: collection=${collection}, id=${id}`);\r\n      const { data } = await api.get(`/api/item/${collection}/${id}`);\r\n      return {\r\n        ...data,\r\n        collection,\r\n        tipo: collection === 'animes' ? 'anime' : 'filme'\r\n      };\r\n    } catch (error) {\r\n      console.error(`Erro ao buscar item ${id} da coleção ${collection}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getRecommendations(collection) {\r\n    try {\r\n      const { data } = await api.get(`/api/random/${collection}`);\r\n      console.log('Recomendações recebidas:', data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Erro ao buscar recomendações:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC3BO,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EAAA,IAAAC,eAAA;EACPC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,IAAI,EAAAC,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClCD,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACD,QAAQ,CAACK,IAAI,CAAC;EACpD;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACxB,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACwB,IAAI,CAAC,iBAAiB,EAAE;MAAEF,KAAK;MAAEC;IAAM,CAAC,CAAC;IACpE,OAAON,IAAI;EACb,CAAC;EAED,MAAMQ,QAAQA,CAACC,IAAI,EAAEJ,KAAK,EAAEC,KAAK,EAAE;IACjC,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACwB,IAAI,CAAC,oBAAoB,EAAE;MAAEE,IAAI;MAAEJ,KAAK;MAAEC;IAAM,CAAC,CAAC;IAC7E,OAAON,IAAI;EACb,CAAC;EAED,MAAMU,cAAcA,CAACC,UAAU,EAAEC,IAAI,EAAE;IACrC,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACwB,IAAI,CAAC,qBAAqB,EAAE;MAAEM,WAAW,EAAEF,UAAU;MAAEC;IAAK,CAAC,CAAC;IACzF,OAAOZ,IAAI;EACb,CAAC;EAED,MAAMc,YAAYA,CAAA,EAAG;IACnB,MAAM;MAAEd;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACgC,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOf,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMgB,cAAc,GAAG;EAC5B,MAAMC,gBAAgBA,CAAA,EAAG;IACvB,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACgC,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOf,IAAI;EACb,CAAC;EAED,MAAMkB,aAAaA,CAACC,KAAK,EAAE;IACzB,MAAM;MAAEnB;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACgC,GAAG,CAAC,iBAAiBK,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;IAC5E,OAAOnB,IAAI;EACb,CAAC;EAED,MAAMR,OAAOA,CAAC6B,UAAU,EAAEC,EAAE,EAAE;IAC5B,IAAI;MACFxB,OAAO,CAACyB,GAAG,CAAC,6BAA6BF,UAAU,QAAQC,EAAE,EAAE,CAAC;MAChE,MAAM;QAAEtB;MAAK,CAAC,GAAG,MAAMjB,GAAG,CAACgC,GAAG,CAAC,aAAaM,UAAU,IAAIC,EAAE,EAAE,CAAC;MAC/D,OAAO;QACL,GAAGtB,IAAI;QACPqB,UAAU;QACVT,IAAI,EAAES,UAAU,KAAK,QAAQ,GAAG,OAAO,GAAG;MAC5C,CAAC;IACH,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,uBAAuB0B,EAAE,eAAeD,UAAU,GAAG,EAAEzB,KAAK,CAAC;MAC3E,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAM4B,kBAAkBA,CAACH,UAAU,EAAE;IACnC,IAAI;MACF,MAAM;QAAErB;MAAK,CAAC,GAAG,MAAMjB,GAAG,CAACgC,GAAG,CAAC,eAAeM,UAAU,EAAE,CAAC;MAC3DvB,OAAO,CAACyB,GAAG,CAAC,0BAA0B,EAAEvB,IAAI,CAAC;MAC7C,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}